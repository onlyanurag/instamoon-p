name: APK Build & Dex Extractor

on:
  push:
    branches:
      - InstaMoon
  pull_request:

jobs:
  build:
    name: Build and Extract DEX
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Build unsigned APK
      run: |
          chmod +x gradlew
          ./gradlew assembleRelease
          
    - name: Decode keystore
      run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks

    - name: Sign APK with apksigner
      run: |
          APK_PATH=$(find app/build/outputs/apk/release -name "*-release-unsigned.apk" | head -n 1)
          SIGNED_APK_PATH="app/build/outputs/apk/release/app-release-signed.apk"

          $ANDROID_HOME/build-tools/35.0.0/apksigner sign \
            --ks keystore.jks \
            --ks-key-alias "${{ secrets.KEY_ALIAS }}" \
            --ks-pass pass:"${{ secrets.KEYSTORE_PASSWORD }}" \
            --key-pass pass:"${{ secrets.KEY_PASSWORD }}" \
            --out "$SIGNED_APK_PATH" \
            "$APK_PATH"
            
    #- name: Upload signed APK
    #  uses: actions/upload-artifact@v4
    #  with:
    #      name: Signed APK
    #      path: app/build/outputs/apk/release/app-release-signed.apk
          
    - name: Install apktool
      run: |
        mkdir -p $HOME/apktool
        wget https://github.com/iBotPeaches/Apktool/releases/download/v2.11.1/apktool_2.11.1.jar -O $HOME/apktool/apktool.jar
        echo -e '#!/bin/bash\njava -jar $HOME/apktool/apktool.jar "$@"' > $HOME/apktool/apktool
        chmod +x $HOME/apktool/apktool
        echo "$HOME/apktool" >> $GITHUB_PATH
        
    - name: Decompile signed apk
      run: |
        apktool d app/build/outputs/apk/release/app-release-signed.apk -o InstaMoon_decompiled
        
    - name: Clean all smali* folders
      run: |
        for dir in InstaMoon_decompiled/smali*; do
          rm -rf "$dir/android"
          if [ -d "$dir/androidx" ]; then
            find "$dir/androidx" -mindepth 1 -maxdepth 1 ! -name "concurrent" -exec rm -rf {} +
          fi
          rm -rf "$dir/com/google/android"
          rm -rf "$dir/com/google/errorprone"
          rm -rf "$dir/org/intellij"
          rm -rf "$dir/org/jetbrains"
          rm -rf "$dir/org/jspecify"
          rm -rf "$dir/com/instagram"
          if [ -d "$dir/com/brianml31/insta_moon" ]; then
            find "$dir/com/brianml31/insta_moon" -type f -name "R*.smali" -delete
          fi
          if [ -d "$dir/com/brianml31/mainactivity" ]; then
            find "$dir/com/brianml31/mainactivity" -type f -name "MainActivity*.smali" -delete
          fi
        done
        
    - name: Unify smali into a single folder
      run: |
        for dir in InstaMoon_decompiled/smali_classes*; do
          if [ -d "$dir" ]; then
            echo "Moving content from $dir to smali/"
            rsync -a "$dir/" InstaMoon_decompiled/smali/
            rm -rf "$dir"
          fi
        done
        
    - name: Move multiple packages to smali_classes2
      run: |
        packages=(
          "com/brianml31/app"
          "com/brianml31/insta_moon"
        )
    
        for pkg in "${packages[@]}"; do
          SRC="InstaMoon_decompiled/smali/$pkg"
          DEST="InstaMoon_decompiled/smali_classes2/$pkg"
    
          echo "Moving $SRC → $DEST"
    
          if [ -d "$SRC" ]; then
            mkdir -p "$DEST"
            mv "$SRC"/* "$DEST"/
            rmdir "$SRC" 2>/dev/null || true
          else
            echo "❌ Source $SRC does not exist."
          fi
        done

    - name: Recompile APK with apktool
      run: |
        apktool b InstaMoon_decompiled -o InstaMoon_recompiled.apk
        
    - name: Extract classes.dex and classes2.dex files from recompiled APK
      run: |
        unzip -o InstaMoon_recompiled.apk classes.dex classes2.dex -d extracted_dex
        
    #- name: Subir archivo DEX extraído
    #  uses: actions/upload-artifact@v4
    #  with:
    #    name: Recompiled DEX
    #    path: extracted_dex/classes.dex
        
    - name: Copy files to temporary folder
      run: |
        mkdir upload
        cp app/build/outputs/apk/release/app-release-signed.apk upload/
        cp extracted_dex/classes.dex upload/
        cp extracted_dex/classes2.dex upload/

    - name: Upload files without folders
      uses: actions/upload-artifact@v4
      with:
        name: InstaMoon and Dex
        path: upload/*
